package com.project.kotlinstudy

fun main() {
    // 스코프는 언어 차원에서 변수나 함수, 클래스 같은 '멤버' 들을 서로 공유하여 사용할 수 있는 범위를 지정해둔 단위
    // 스코프 1. 스코프 외부에서는 스코프내부 맴버를 참조 연산자로만 접근 가능하다. ex) a.eat()
    // 2. 동일 스코프 내부에서는 멤버를 공유 할 수 있다.
    // 3. 하위 스코프에서는 상위 스코프의 멤버를 재구성 할 수 있다.

    // 패키지 스코프 접근 제한자에는 변수 함수 클래스앞에 사용
    //public: 어떤 패키지에서도 접근가능
    //internal: 같은 모듈 내에서만 접근 가능
    //private: 같은 파일 내에서만 접근 가능
    //protected: 스코프에서는 사용안함

    // 클래스 스코프 접근 제한자
    //public: 클래스 외부에서 늘 접근 가능
    //private: 클래스 내부에서만 접근 가능
    //protected: 클래스 자신과 상속받은 클래스에서 접근가능
    
    //스코프는 맴버들의 가용범위를 지정해 둔 단위로 개발자는 의도에 따라 클래스내에 변수나 함수 클래스를 배치할 수 있으며

    // 접근 제한자는 이러한 스코프의 외부와 내부에서 사용할 멤버를 분리하여 스코프 외부에서 건드리지 말아야 할 기능이나 값들을 안전하게 제한 할 수 있는 용도
}